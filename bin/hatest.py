#!/usr/bin/python
# -*- coding:utf-8 -*-


import gtk
import sqlite3
import paramiko
import time

class HaTestCenter(gtk.VBox):
	def __init__(self):
		gtk.VBox.__init__(self)

		Hbox=gtk.HBox()
		self.add(Hbox)
		Vbox1=gtk.VBox()
		Vbox1.set_border_width(20)
		Hbox.pack_start(Vbox1,True,True,0)
		Vline=gtk.VSeparator()
		Hbox.pack_start(Vline,False,False,0)
		Vbox2=gtk.VBox()
		Vbox2.set_border_width(20)
		Hbox.pack_start(Vbox2,True,True,0)

		#===============Left===================#
		frame1=gtk.Frame('服务器')
		frame2=gtk.Frame('信息查看')
		frame3=gtk.Frame('切换测试')

		fixed=gtk.Fixed()
		frame1.add(fixed)
		label=gtk.Label('主机')
		fixed.put(label,20,10)
		comboboxentry1=gtk.ComboBoxEntry()
		comboboxentry1.set_size_request(200,25)
		fixed.put(comboboxentry1,20,30)
		button=gtk.Button('启动HA')
		button.connect('clicked',self.start_stop_ha,comboboxentry1)
		button.set_size_request(100,25)
		fixed.put(button,260,30)

		fixed=gtk.Fixed()
		frame2.add(fixed)
		textview=gtk.TextView()
		textview.set_size_request(340,200)
		fixed.put(textview,20,10)
		liststore=gtk.ListStore(str)
		liststore.append(['IP信息'])
		liststore.append(['基本日志'])
		liststore.append(['调试日志'])
		comboboxentry=gtk.ComboBoxEntry(liststore)
		comboboxentry.set_size_request(200,25)
		fixed.put(comboboxentry,20,220)
		button=gtk.Button('查看')
		button.connect('clicked',self.watch_log,[comboboxentry1,textview])
		button.set_size_request(100,25)
		fixed.put(button,260,220)

		fixed=gtk.Fixed()
		frame3.add(fixed)
		frame31=gtk.Frame('直切')
		frame31.set_size_request(340,50)
		fixed.put(frame31,20,10)
		fixed1=gtk.Fixed()
		frame31.add(fixed1)
		radio1=gtk.RadioButton(None,'切过去')
		radio2=gtk.RadioButton(radio1,'切回来')
		button=gtk.Button('操作')
		button.set_size_request(100,25)
		fixed1.put(radio1,40,5)
		fixed1.put(radio2,120,5)
		fixed1.put(button,230,5)
		frame32=gtk.Frame('杀进程')
		frame32.set_size_request(340,50)
		fixed.put(frame32,20,65)
		fixed2=gtk.Fixed()
		frame32.add(fixed2)
		liststore=gtk.ListStore(str)
		liststore.append(['nginx'])
		liststore.append(['memcached'])
		liststore.append(['mysql'])
		liststore.append(['mfsmaster'])
		comboboxentry=gtk.ComboBoxEntry(liststore)
		comboboxentry.set_size_request(200,25)
		fixed2.put(comboboxentry,10,5)
		button=gtk.Button('杀死它')
		button.set_size_request(100,25)
		fixed2.put(button,230,5)

		Vbox1.pack_start(frame1,False,False,0)
		Vbox1.pack_start(frame2,False,False,0)
		Vbox1.pack_start(frame3,False,False,0)
		#===============Right===================#
		frame1=gtk.Frame('服务器')
		frame2=gtk.Frame('信息查看')
		frame3=gtk.Frame('切换测试')

		fixed=gtk.Fixed()
		frame1.add(fixed)
		label=gtk.Label('备机')
		fixed.put(label,20,10)
		comboboxentry1=gtk.ComboBoxEntry()
		comboboxentry1.set_size_request(200,25)
		fixed.put(comboboxentry1,20,30)
		button=gtk.Button('启动HA')
		button.set_size_request(100,25)
		fixed.put(button,260,30)

		fixed=gtk.Fixed()
		frame2.add(fixed)
		textview=gtk.TextView()
		textview.set_size_request(340,200)
		fixed.put(textview,20,10)
		liststore=gtk.ListStore(str)
		liststore.append(['IP信息'])
		liststore.append(['基本日志'])
		liststore.append(['调试日志'])
		comboboxentry=gtk.ComboBoxEntry(liststore)
		comboboxentry.set_size_request(200,25)
		fixed.put(comboboxentry,20,220)
		button=gtk.Button('查看')
		button.connect('clicked',self.watch_log,[comboboxentry1,textview])
		button.set_size_request(100,25)
		fixed.put(button,260,220)

		fixed=gtk.Fixed()
		frame3.add(fixed)
		frame31=gtk.Frame('直切')
		frame31.set_size_request(340,50)
		fixed.put(frame31,20,10)
		fixed1=gtk.Fixed()
		frame31.add(fixed1)
		radio1=gtk.RadioButton(None,'切过去')
		radio2=gtk.RadioButton(radio1,'切回来')
		button=gtk.Button('操作')
		button.set_size_request(100,25)
		fixed1.put(radio1,40,5)
		fixed1.put(radio2,120,5)
		fixed1.put(button,230,5)
		frame32=gtk.Frame('杀进程')
		frame32.set_size_request(340,50)
		fixed.put(frame32,20,65)
		fixed2=gtk.Fixed()
		frame32.add(fixed2)
		liststore=gtk.ListStore(str)
		liststore.append(['nginx'])
		liststore.append(['memcached'])
		liststore.append(['mysql'])
		liststore.append(['mfsmaster'])
		comboboxentry=gtk.ComboBoxEntry(liststore)
		comboboxentry.set_size_request(200,25)
		fixed2.put(comboboxentry,10,5)
		button=gtk.Button('杀死它')
		button.set_size_request(100,25)
		fixed2.put(button,230,5)
		
		

		Vbox2.pack_start(frame1,False,False,0)
		Vbox2.pack_start(frame2,False,False,0)
		Vbox2.pack_start(frame3,False,False,0)
	
	def start_stop_ha(self,widget,entry):
		host=entry.get_active_text()
		conn=sqlite3.connect('db/server.db')
		cursor=conn.cursor()
		cursor.execute("select port,username,password from server where hostname='%s'" %host)
		data=cursor.fetchone()
		port=int(data[0])
		username=data[1]
		password=data[2]
		cursor.close()
		conn.close()
		print host,port,username,password			
		label=widget.get_label()
		if '启动' in label:
			ssh=paramiko.SSHClient()
			ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
			ssh.connect(hostname=host,port=port,username=username,password=password,timeout=60)
			stdin,stdout,stderr=ssh.exec_command('/etc/init.d/heartbeat start')
			print stdout.read()
			ssh.close()
			widget.set_label('停止HA')
		
		else:
			ssh=paramiko.SSHClient()
			ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
			ssh.connect(hostname=host,port=port,username=username,password=password,timeout=60)
			stdin,stdout,stderr=ssh.exec_command('/etc/init.d/heartbeat stop')
			print stdout.read()
			ssh.close()
			widget.set_label('启动HA')
	
	def watch_log(self,widget,stuff):
		entry=stuff[0]
		textview=stuff[1]
		textbuffer=textview.get_buffer()
		host=entry.get_active_text()
		conn=sqlite3.connect('db/server.db')
		cursor=conn.cursor()
		cursor.execute("select port,username,password from server where hostname='%s'" %host)
		data=cursor.fetchone()
		port=int(data[0])
		username=data[1]
		password=data[2]
		cursor.close()
		conn.close()
		print host,port,username,password			
		ssh=paramiko.SSHClient()
		ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
		ssh.connect(hostname=host,port=port,username=username,password=password,timeout=60)
		stdin,stdout,stderr=ssh.exec_command("ifconfig | sed '/^lo/,$d'")
		str=stdout.read()
		textbuffer.set_text(str)
		print str
		time.sleep(1)
		stdin,stdout,stderr=ssh.exec_command("ifconfig | sed '/^lo/,$d'")
		str=stdout.read()
		textbuffer.set_text(str)
		print str
		time.sleep(1)
		stdin,stdout,stderr=ssh.exec_command("ifconfig | sed '/^lo/,$d'")
		str=stdout.read()
		textbuffer.set_text(str)
		print str
		time.sleep(1)
		stdin,stdout,stderr=ssh.exec_command("ifconfig | sed '/^lo/,$d'")
		str=stdout.read()
		textbuffer.set_text(str)
		print str
		time.sleep(1)
		stdin,stdout,stderr=ssh.exec_command("ifconfig | sed '/^lo/,$d'")
		str=stdout.read()
		textbuffer.set_text(str)
		print str
		time.sleep(1)
		stdin,stdout,stderr=ssh.exec_command("ifconfig | sed '/^lo/,$d'")
		str=stdout.read()
		textbuffer.set_text(str)
		print str
		time.sleep(1)
